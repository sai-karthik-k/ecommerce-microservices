package com.example.demo.service;

import com.example.demo.client.ProductClient;
import com.example.demo.model.Order;
import com.example.demo.model.Product;
import com.example.demo.repository.OrderRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class OrderService {

    @Autowired
    private OrderRepository orderRepository;

    @Autowired
    private ProductClient productClient;

    // Fetch all orders
    public List<Order> getAllOrders() {
        return orderRepository.findAll();
    }

    // Create a new order
    public Order createOrder(Order order) {
        // Call products-service via Feign client
        Product product = productClient.getProductById(order.getProdId());
        if (product.getQuantity() < order.getQuantity()) {
            throw new RuntimeException("Insufficient quantity for product ID: " + order.getProdId());
        }

        // Calculate total price
        order.setTotalPrice(product.getPrice() * order.getQuantity());

        // Optional: update product quantity in product-service (not implemented here)

        // Save order
        return orderRepository.save(order);
    }
}
